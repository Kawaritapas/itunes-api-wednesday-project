{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tapas/Desktop/wednesday-project/src/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Image, List } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\n\nfunction Card(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  console.log(props.song);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      verticalAlign: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Content, {\n          floated: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(true),\n            basic: true,\n            color: \"violet\",\n            style: {\n              marginTop: \"20px\"\n            },\n            children: \"More information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          size: \"tiny\",\n          avatar: true,\n          src: props.song.artworkUrl100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: props.song.previewUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: \"pink\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      color: \"black\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"More information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: props.song.artworkUrl100,\n          style: {\n            height: \"100px\"\n          },\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"15px\",\n              color: \"blue\"\n            },\n            children: [\"Track name:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: props.song.trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"15px\",\n              color: \"blue\"\n            },\n            children: [\"Artist name:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: props.song.artistName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"15px\",\n              color: \"blue\"\n            },\n            children: [\"Track price:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: [props.song.trackPrice, \" \", props.song.currency]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"15px\",\n              color: \"blue\"\n            },\n            children: [\"Origin:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: props.song.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"15px\",\n              color: \"blue\"\n            },\n            children: [\"Genre:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"black\"\n              },\n              children: props.song.primaryGenreName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Close\",\n          labelPosition: \"right\",\n          icon: \"close\",\n          onClick: () => setOpen(false),\n          negative: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/tapas/Desktop/wednesday-project/src/Card.js"],"names":["React","Button","Image","List","Modal","Card","props","open","setOpen","useState","console","log","song","marginTop","artworkUrl100","previewUrl","color","height","fontSize","trackName","artistName","trackPrice","currency","country","primaryGenreName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Image, List } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\n\nfunction Card(props) {\n  const [open, setOpen] = React.useState(false);\n  console.log(props.song);\n  return (\n    <React.Fragment>\n      <List divided verticalAlign=\"middle\">\n        <List.Item>\n          <List.Content floated=\"right\">\n            <Button\n              onClick={() => setOpen(true)}\n              basic\n              color=\"violet\"\n              style={{ marginTop: \"20px\" }}\n            >\n              More information\n            </Button>\n          </List.Content>\n          <Image size={\"tiny\"} avatar src={props.song.artworkUrl100} />\n          <List.Content>\n            <audio controls>\n              <source src={props.song.previewUrl}></source>\n            </audio>\n          </List.Content>\n        </List.Item>\n        <hr style={{ color: \"pink\" }}></hr>\n      </List>\n\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        color=\"black\"\n      >\n        <Modal.Header>More information</Modal.Header>\n        <Modal.Content image>\n          <Image\n            src={props.song.artworkUrl100}\n            style={{ height: \"100px\" }}\n            wrapped\n          />\n          <Modal.Description>\n            <p style={{ fontSize: \"15px\", color: \"blue\" }}>\n              Track name:{\" \"}\n              <span style={{ color: \"black\" }}>{props.song.trackName}</span>\n            </p>\n            <p style={{ fontSize: \"15px\", color: \"blue\" }}>\n              Artist name:{\" \"}\n              <span style={{ color: \"black\" }}>{props.song.artistName}</span>\n            </p>\n            <p style={{ fontSize: \"15px\", color: \"blue\" }}>\n              Track price:{\" \"}\n              <span style={{ color: \"black\" }}>\n                {props.song.trackPrice} {props.song.currency}\n              </span>\n            </p>\n            <p style={{ fontSize: \"15px\", color: \"blue\" }}>\n              Origin:{\" \"}\n              <span style={{ color: \"black\" }}>{props.song.country}</span>\n            </p>\n            <p style={{ fontSize: \"15px\", color: \"blue\" }}>\n              Genre:{\" \"}\n              <span style={{ color: \"black\" }}>\n                {props.song.primaryGenreName}\n              </span>\n            </p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            content=\"Close\"\n            labelPosition=\"right\"\n            icon=\"close\"\n            onClick={() => setOpen(false)}\n            negative\n          />\n        </Modal.Actions>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}